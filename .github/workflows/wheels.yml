---
name: Build and Upload Wheels

on:  # yamllint disable-line rule:truthy
  workflow_dispatch:
    inputs:
      repository:
        description: 'The repository to upload the package to'
        required: true
        default: 'dummy'
        type: choice
        options:
          - dummy
          - testpypi
          - pypi
      cibw_skip:
        description: 'The CIBW_SKIP env for cibuildwheels'
        required: true
        default: cp38-win_arm64

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}_${{ matrix.archs }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04]
        archs: [x86_64, i686, aarch64, ppc64le, s390x]
        build: [manylinux, musllinux]
        include:
          - os: windows-2022
            archs: AMD64
          - os: windows-2022
            archs: x86
          - os: windows-2022
            archs: ARM64
          - os: macOS-12
            archs: x86_64
          - os: macOS-12
            archs: arm64
          - os: macOS-12
            archs: universal2
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v2
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.12.3
        with:
          output-dir: wheelhouse
        env:
          CIBW_BUILD: "{cp38,cp39,cp310,cp311}-${{ matrix.build }}*"
          CIBW_SKIP: ${{ github.event.inputs.cibw_skip }}
          CIBW_ARCHS: ${{ matrix.archs }}
          CIBW_BUILD_FRONTEND: 'build'
          CIBW_TEST_REQUIRES: 'pytest'
          CIBW_TEST_COMMAND: 'pytest {project}'
          # Until the day Apple silicon instances are available on GH Actions
          CIBW_TEST_SKIP: '*-win_arm64 *-macosx_arm64'
      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl
  build_sdist:
    name: Build a source distribution
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Build sdist
        run: python setup.py build sdist
      - uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz
  publish:
    name: 'Upload to PyPI/Test PyPI'
    runs-on: ubuntu-22.04
    needs: [build_wheels, build_sdist]
    steps:
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Set up built items
        uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine
      - name: Publish
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          twine upload --repository ${{ github.event.inputs.repository }} dist/*
